package GUI;


import OLD_GUI.EditMasterKey;
import Exceptions.KeyringException;
import Classes.Folder;
import Classes.Key;
import Classes.KeyringObject;
import Keyring.KeyringClass;
import Classes.Page;
import GUI.Classes.ActionFolderListener;
import GUI.Classes.ActionKeyListener;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Nino
 */
public class KeyringMain extends javax.swing.JFrame {
    
    /**
     * Creates new form KeyringMain
     * @param keyring
     */
    public KeyringMain() throws KeyringException {
        this.keyring = new KeyringClass("ciao");
        initComponents();
        initFolderTree(); 
        initKeyTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelLogo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jFolderTree = new GUI.Components.JFolderTree();
        jButton_AddKey = new javax.swing.JButton();
        jCheckBox_ShowPassword = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jKeyTable = new GUI.Components.JKeyTable();
        jTextField_FindKey = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem_NewKeyring = new javax.swing.JMenuItem();
        jMenuItem_EditMasterKey = new javax.swing.JMenuItem();
        jMenuItem_Exit = new javax.swing.JMenuItem();
        jMenu_credits = new javax.swing.JMenu();
        jMenuItem_credits = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Keyring");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Images/logo1.png")));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabelLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logo.png"))); // NOI18N

        jFolderTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jFolderTreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jFolderTree);

        jButton_AddKey.setText("Aggiungi");
        jButton_AddKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AddKeyActionPerformed(evt);
            }
        });

        jCheckBox_ShowPassword.setText("Mostra password");
        jCheckBox_ShowPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_ShowPasswordActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(jKeyTable);

        jTextField_FindKey.setToolTipText("Inserisci il testo da cercare");
        jTextField_FindKey.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_FindKeyKeyReleased(evt);
            }
        });

        jLabel2.setText("Trova:");

        jMenu1.setText("File");

        jMenuItem_NewKeyring.setText("Nuovo keyring");
        jMenuItem_NewKeyring.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_NewKeyringActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem_NewKeyring);

        jMenuItem_EditMasterKey.setText("Modifica master Key");
        jMenuItem_EditMasterKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_EditMasterKeyActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem_EditMasterKey);

        jMenuItem_Exit.setText("Esci");
        jMenuItem_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_ExitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem_Exit);

        jMenuBar1.add(jMenu1);

        jMenu_credits.setText("?");

        jMenuItem_credits.setText("Credits");
        jMenuItem_credits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_creditsActionPerformed(evt);
            }
        });
        jMenu_credits.add(jMenuItem_credits);

        jMenuBar1.add(jMenu_credits);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addComponent(jLabelLogo))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField_FindKey, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jCheckBox_ShowPassword)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_AddKey)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField_FindKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_AddKey)
                            .addComponent(jCheckBox_ShowPassword))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem_NewKeyringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_NewKeyringActionPerformed
        NewKeyring_JDialog newKeyringDialog = new NewKeyring_JDialog(this, true);
        newKeyringDialog.setLocationRelativeTo(this);
        newKeyringDialog.setVisible(true);
    }//GEN-LAST:event_jMenuItem_NewKeyringActionPerformed



    private void jMenuItem_EditMasterKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_EditMasterKeyActionPerformed
        EditMasterKey e = new EditMasterKey(this, true, keyring);
        e.setLocationRelativeTo(this);
        e.setVisible(true);        
    }//GEN-LAST:event_jMenuItem_EditMasterKeyActionPerformed

    private void jMenuItem_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_ExitActionPerformed
        dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_jMenuItem_ExitActionPerformed

    private void jMenuItem_creditsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_creditsActionPerformed
        Credits c = new Credits(this, true);
        c.setLocationRelativeTo(this);
        c.setVisible(true);
    }//GEN-LAST:event_jMenuItem_creditsActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int result = JOptionPane.showConfirmDialog(this, "Sei sicuro di voler uscire?",
            "Conferma uscita", JOptionPane.YES_NO_CANCEL_OPTION);
        if(result != JOptionPane.YES_OPTION) return;
        System.out.println("\n<----- KEYRING ----->");
        dispose();
    }//GEN-LAST:event_formWindowClosing

    private void jFolderTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jFolderTreeValueChanged
        Page page = jFolderTree.getSelectedPage();
        jKeyTable.loadTable(page);
    }//GEN-LAST:event_jFolderTreeValueChanged

    private void jButton_AddKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AddKeyActionPerformed
        jKeyTable.fireAddKeyAction();
    }//GEN-LAST:event_jButton_AddKeyActionPerformed

    private void jCheckBox_ShowPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_ShowPasswordActionPerformed
        jKeyTable.showPassword(jCheckBox_ShowPassword.isSelected());
    }//GEN-LAST:event_jCheckBox_ShowPasswordActionPerformed

    private void jTextField_FindKeyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_FindKeyKeyReleased
        jKeyTable.filter(jTextField_FindKey.getText());
    }//GEN-LAST:event_jTextField_FindKeyKeyReleased

    
    
    private final KeyringClass keyring;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_AddKey;
    private javax.swing.JCheckBox jCheckBox_ShowPassword;
    private GUI.Components.JFolderTree jFolderTree;
    private GUI.Components.JKeyTable jKeyTable;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelLogo;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem_EditMasterKey;
    private javax.swing.JMenuItem jMenuItem_Exit;
    private javax.swing.JMenuItem jMenuItem_NewKeyring;
    private javax.swing.JMenuItem jMenuItem_credits;
    private javax.swing.JMenu jMenu_credits;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField_FindKey;
    // End of variables declaration//GEN-END:variables

    private void initFolderTree() {        
        KeyringMain self = this;
        
        jFolderTree.setRootFolder(this.keyring.getRootFolder());        
        jFolderTree.addActionFolderListener(new ActionFolderListener() {
            @Override
            public void addFolderAction(Folder parentFolder, KeyringObject currentObject) {
                try {
                    UpsertFolder uF = new UpsertFolder(self, true, parentFolder, currentObject);
                    uF.setLocationRelativeTo(self);        
                    uF.setVisible(true);
                } catch (KeyringException ex) {
                    JOptionPane.showMessageDialog(self, ex.getMessage(), ex.getTitleMsg(), ex.getTypeMessage());
                }
            }

            @Override
            public void editFolderAction(Folder folder) {
                try {
                    UpsertFolder uF = new UpsertFolder(self, true, folder, null);
                    uF.setLocationRelativeTo(self);        
                    uF.setVisible(true);
                } catch (KeyringException ex) {
                    JOptionPane.showMessageDialog(self, ex.getMessage(), ex.getTitleMsg(), ex.getTypeMessage());
                    System.err.println("Errore: "+ ex.getMessage());
                }
            }

            @Override
            public void deleteFolderAction(Folder parentFolder, Folder folder) {
                int result = JOptionPane.showConfirmDialog(self, "Sei sicuro di voler eliminare la cartella "+folder.getName()+"? \nTutto il suo contenuto verrà cancellato.",
                        "Conferma uscita", JOptionPane.YES_NO_CANCEL_OPTION);
                if(result != JOptionPane.YES_OPTION) return;
                
                try {
                    parentFolder.removeSubfolder(folder);
                } catch (KeyringException ex) {
                    JOptionPane.showMessageDialog(self, ex.getMessage(), ex.getTitleMsg(), ex.getTypeMessage());
                    System.err.println("Errore: "+ ex.getMessage());
                }
            }

            @Override
            public void addPageAction(Folder parentFolder, KeyringObject currentObject) {
                try {
                    UpsertPage uP = new UpsertPage(self, true, parentFolder, currentObject);
                    uP.setLocationRelativeTo(self);        
                    uP.setVisible(true);
                } catch (KeyringException ex) {
                    JOptionPane.showMessageDialog(self, ex.getMessage(), ex.getTitleMsg(), ex.getTypeMessage());
                    System.err.println("Errore: "+ ex.getMessage());
                }
            }

            @Override
            public void editPageAction(Page page) {
                try {
                    UpsertPage uP = new UpsertPage(self, true, null, page);
                    uP.setLocationRelativeTo(self);        
                    uP.setVisible(true);
                } catch (KeyringException ex) {
                    JOptionPane.showMessageDialog(self, ex.getMessage(), ex.getTitleMsg(), ex.getTypeMessage());
                }
            }

            @Override
            public void deletePageAction(Folder parentFolder, Page page) {
                int result = JOptionPane.showConfirmDialog(self, "Sei sicuro di voler eliminare la pagina "+page.getName()+"?",
                        "Conferma uscita", JOptionPane.YES_NO_CANCEL_OPTION);
                if(result != JOptionPane.YES_OPTION) return;
                
                try {
                    parentFolder.removePage(page);
                } catch (KeyringException ex) {
                    JOptionPane.showMessageDialog(self, ex.getMessage(), ex.getTitleMsg(), ex.getTypeMessage());
                }
            }
        });
    }

    private void initKeyTable() {
        KeyringMain self = this;
        
        jKeyTable.addKeyFolderListener(new ActionKeyListener() {
            @Override
            public void onAddKeyAction(Page page) {
                try {
                    UpsertKey uk = new UpsertKey(self, true, page, null);
                    uk.setLocationRelativeTo(self);        
                    uk.setVisible(true);
                } catch (KeyringException ex) {
                    JOptionPane.showMessageDialog(self, ex.getMessage(), ex.getTitleMsg(), ex.getTypeMessage());
                }
            }

            @Override
            public void onEditKeyAction(Key key) {
                try {
                    UpsertKey uk = new UpsertKey(self, true, null, key);
                    uk.setLocationRelativeTo(self);        
                    uk.setVisible(true);
                } catch (KeyringException ex) {
                    JOptionPane.showMessageDialog(self, ex.getMessage(), ex.getTitleMsg(), ex.getTypeMessage());
                }
            }
        });
    }
   
}
